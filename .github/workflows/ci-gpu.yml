name: CI - GPU (Windows self-hosted)

on:
  push:
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-gpu-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gpu-tests:
    name: GPU Job (Windows, self-hosted)
    runs-on: [self-hosted, Windows, X64, gpu, cuda, nvidia]
    timeout-minutes: 60
    defaults:
      run:
        shell: pwsh   # PowerShell 7

    steps:
      # --- 1) Checkout ---
      - name: Checkout
        uses: actions/checkout@v4

      # --- 2) Runner info (PowerShell/CUDA) ---
      - name: Print runner info (PowerShell / CUDA)
        run: |
          Write-Host "=== PowerShell Version ==="
          $PSVersionTable.PSVersion
          
          Write-Host "`n=== NVIDIA / CUDA ==="
          if (Get-Command nvidia-smi.exe -ErrorAction SilentlyContinue) {
            nvidia-smi.exe
          } else {
            Write-Host "nvidia-smi not found"
          }
          Write-Host "CUDA_PATH: $env:CUDA_PATH"

      # --- 3) Python 3.12 ---
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          check-latest: true

      # --- 4) Verify Python ---
      - name: Verify Python
        run: |
          Write-Host "=== Python Version ==="
          python --version
          Write-Host "`n=== Python Path ==="
          where.exe python

      # --- 5) Install dependencies (no pip cache) ---
      - name: Install dependencies (venv, no cache)
        working-directory: fastapi
        run: |
          python -m venv .venv
          $py = ".\.venv\Scripts\python.exe"
          & $py -m pip install --no-cache-dir --upgrade pip
          if (Test-Path .\requirements.txt) {
            & $py -m pip install --no-cache-dir -r requirements.txt
          }
          if (Test-Path .\requirements-dev.txt) {
            & $py -m pip install --no-cache-dir -r requirements-dev.txt
          }

      # --- 6) Install Torch with CUDA (no cache) ---
      # Change cu124 if needed (e.g., cu122 or cpu). cu124 works for CUDA 12.4.
      - name: Install PyTorch (no cache, CU124)
        working-directory: fastapi
        run: |
          $py = ".\.venv\Scripts\python.exe"
          $TORCH_INDEX = "https://download.pytorch.org/whl/cu124"
          & $py -m pip install --no-cache-dir --index-url $TORCH_INDEX torch
          # Add torchvision/torchaudio if required:
          # & $py -m pip install --no-cache-dir --index-url $TORCH_INDEX torchvision torchaudio

      # --- 7) Torch / CUDA sanity check ---
      - name: Torch / CUDA sanity check
        working-directory: fastapi
        continue-on-error: true
        run: |
          $py = ".\.venv\Scripts\python.exe"
          @"
          import torch
          print("Torch:", torch.__version__)
          print("CUDA available:", torch.cuda.is_available())
          if torch.cuda.is_available():
              print("Device count:", torch.cuda.device_count())
              print("Current device:", torch.cuda.current_device())
              print("Device name:", torch.cuda.get_device_name(0))
          "@ | Set-Content -Encoding UTF8 _torch_check.py
                    & $py _torch_check.py


      # --- 8) Run tests if present ---
      - name: Run GPU tests (pytest if present)
        working-directory: fastapi
        run: |
          $py = ".\.venv\Scripts\python.exe"

          $hasIni   = (Test-Path .\pytest.ini)
          $hasFiles = (Get-ChildItem -Path . -Recurse -Filter "*test*.py" -File | Select-Object -First 1)
          if ($hasIni -or $hasFiles) {
            & $py -m pip install --no-cache-dir pytest pytest-cov
            & $py -m pytest -q --maxfail=1 --disable-warnings `
              --cov=app --cov-report=xml --junitxml=pytest-report.xml
          } else {
            Write-Host "No tests detected. Skipping pytest."
          }

      # --- 9) Upload artifacts (small & targeted) ---
      - name: Upload coverage.xml (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: fastapi/coverage.xml
          if-no-files-found: ignore
          compression-level: 6

      - name: Upload pytest report (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: fastapi/pytest-report.xml
          if-no-files-found: ignore
          compression-level: 6

      # --- 10) Cleanup to keep disk small on self-hosted (optional) ---
      - name: Cleanup heavy folders
        if: always()
        run: |
          # Clean venv and caches before Post job cleanup
          Remove-Item -Recurse -Force fastapi\.venv -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force .pytest_cache, **\__pycache__ -ErrorAction SilentlyContinue
